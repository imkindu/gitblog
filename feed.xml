<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>imkindu</title>
        <description>GitBlog是一个简单易用的Markdown博客系统</description>
        <link>/</link>
        <atom:link href="//feed.xml" rel="self" type="application/rss+xml" />
        <pubDate>2017-07-16 04:07:07</pubDate>
        <lastBuildDate>2017-07-16 04:07:07</lastBuildDate>
        <generator>Gitblog v1.0</generator>
                <item>
            <title>shell 特性</title>
            <description>
            &lt;!--
author: imkindu
date: 2015-07-30
title: shell 特性
tags: shell
category: linux
status: publish
summary: shell 特性
--&gt;
&lt;link href=&quot;http://cdn.bootcss.com/highlight.js/8.0/styles/monokai_sublime.min.css&quot; rel=&quot;stylesheet&quot;&gt;  
&lt;script src=&quot;http://cdn.bootcss.com/highlight.js/8.0/highlight.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;&lt;h3 style align='center'&gt;shell 特性&lt;/h3&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h5&gt;什么是shell:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;shell是一个用c语言编写的程序，是用户使用linux的桥梁，
它接收用户输入的命令并把它送入内核去执行&lt;/li&gt;
&lt;li&gt;shell即使一种命令语言，也是一种程序设计语言&lt;/li&gt;
&lt;li&gt;shell时linux的命令解释器（command interpreter）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;img/shell01.png&quot; alt=&quot;shell&quot; title=&quot;shell&quot; /&gt;&lt;/p&gt;
&lt;h5&gt;shell环境&lt;/h5&gt;
&lt;p&gt;　　linux的shell种类众多，常见的有：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    [imkindu@centos6 scripts]$ cat /etc/shells  ＃查看当前系统所有的shell
    /bin/sh             #Bourne Shell
    /bin/bash           #Bourne Again Shell
    /sbin/nologin       #系统用户，不能登录
    /bin/dash
    /bin/tcsh
    /bin/csh            #C Shell

    [imkindu@centos6 scripts]$ echo $SHELL      #显示当前环境使用shell
    /bin/bash&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;　　Bash是大多数Linux系统的默认shell。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    [imkindu@centos6 scripts]$ ll /bin/sh 
    lrwxrwxrwx. 1 root root 4 Jul 14 10:38 /bin/sh -&amp;gt; bash  #软链接&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;　　现在一般情况下，并不区分sh和bash,像#!/bin/sh可以写为#!/bin/bash &lt;br/&gt;
　　&lt;strong&gt;#!      申明用哪种解释器&lt;/strong&gt;&lt;/p&gt;
&lt;h5&gt;命令执行&lt;/h5&gt;
&lt;p&gt;　　在用户输入命令后回车，会提请shell程序找到输入的命令所对应的可执行程序或者代码，并分析后提交给内核分配资源，将其运行起来&lt;/p&gt;
&lt;h5&gt;内部命令和外部命令&lt;/h5&gt;
&lt;p&gt;　　linux命令分为：&lt;strong&gt;内部命令&lt;/strong&gt; 和 &lt;strong&gt;外部命令&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h5&gt;内部命令：&lt;/h5&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　内部命令实际上就是shell程序的一部分，通常在Linux系统加载时就被加载并驻留在内存中了，其执行速度比外部命令快，因为解析内部命令不需要创建子进程。如&lt;code&gt;cd&lt;/code&gt;,&lt;code&gt;echo&lt;/code&gt;,&lt;code&gt;history&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h5&gt;外部命令：&lt;/h5&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　外部命令是Linux中实用程序部分，因程序的功能强大，包含的程序量也大，并不会随系统启动加载到内存中，只有在使用的时候才会被调用内存，通常放在&lt;code&gt;/bin&lt;/code&gt;、&lt;code&gt;/usr/bin&lt;/code&gt;、&lt;code&gt;/usr/sbin&lt;/code&gt;...等目录中&lt;/p&gt;
&lt;h5&gt;区分内部命令外部命令 type&lt;/h5&gt;
&lt;p&gt;　　&lt;strong&gt;命令类型&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;alias 别名&lt;/li&gt;
&lt;li&gt;builtin 内置命令&lt;/li&gt;
&lt;li&gt;function 函数，shell函数&lt;/li&gt;
&lt;li&gt;file 文件，外部命令&lt;/li&gt;
&lt;li&gt;keyword 关键字&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;unfount 没有找到&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[imkindu@centos6 scripts]$ type echo
echo is a shell builtin                 #内部命令
[imkindu@centos6 scripts]$ type ls
ls is aliased to `ls --color=auto'      #别名
[imkindu@centos6 scripts]$ type passwd
passwd is /usr/bin/passwd               #外部命令&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;命令优先级&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;alias #别名 &amp;gt; builtin #内置命令 &amp;gt; hash #hash缓存 &amp;gt; path #外部命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;hash表&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;linux系统中有一个hash表，当执行外部命令或者别名是，系统会将这条命令的路劲和名称保存在这张表里，相当于缓存一样，下一次系统调用这条命令时，直接找到hash表里面的命令所对应的路径执行，不用再path路径下寻找了，大大提高了命令的调用效率&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;    hash                    #显示hash缓存
    hash -l                 #显示hash缓存
    hash -p paht name       #将命令全路径path起别名name
    hash -t name            #打印缓存中name的路径
    hash -d name            #清除name缓存
    hash -r                 #清除所有缓存

    [imkindu@centos6 scripts]$ hash -l
    builtin hash -p /bin/readlink readlink
    builtin hash -p /usr/bin/vim vim
    builtin hash -p /bin/cat cat
    builtin hash -p /bin/touch touch
    builtin hash -p /bin/mv mv
    builtin hash -p /bin/uname uname
    builtin hash -p /bin/ln ln
    builtin hash -p /usr/bin/whoami whoami
    builtin hash -p /bin/env env
    builtin hash -p /bin/ls ls&lt;/code&gt;&lt;/pre&gt;            </description>
            <pubDate>2017-07-16 03:18:02</pubDate>
            <link>//blog/shell.html</link>
            <guid isPermaLink="true">//blog/shell.html</guid>
                                               <category>linux</category>
                                    </item>
                <item>
            <title>alias 别名</title>
            <description>
            &lt;!--
author: imkindu
date: 2015-07-30
title: alias 别名
tags: alias
category: linux
status: publish
summary: alias 命令用来设定指令的别名，在Linux系统经常有一些很长的路径或者命令...
--&gt;
&lt;link href=&quot;http://cdn.bootcss.com/highlight.js/8.0/styles/monokai_sublime.min.css&quot; rel=&quot;stylesheet&quot;&gt;  
&lt;script src=&quot;http://cdn.bootcss.com/highlight.js/8.0/highlight.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;&lt;h3 style align='center'&gt;alias别名&lt;/h3&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;简介:&lt;/h3&gt;
&lt;p&gt;　　&lt;strong&gt;&lt;em&gt;alias&lt;/em&gt;&lt;/strong&gt; 命令用来设定指令的别名，在Linux系统经常有一些很长的路径或者命令，在使用时，我们可以使用较短的名称来进行简化。在使用alias时，必须使用 &lt;code&gt;''&lt;/code&gt; 将原来的命令引起来，以防特殊字符导致错误。&lt;/p&gt;
&lt;p&gt;　　&lt;strong&gt;&lt;em&gt;alias&lt;/em&gt;&lt;/strong&gt;命令仅限于当前环境操作，如果退出或者重启等操作，别名将会实现，如果需要永久生效，需要将自定义别名写入配置文件中&lt;code&gt;/etc/bashrc&lt;/code&gt;  &lt;code&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;查看当前环境所有别名&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;    [imkindu@centos6 scripts]$ alias        #查看当前环境所有别名
    alias l.='ls -d .* --color=auto'
    alias ll='ls -l --color=auto'
    alias ls='ls --color=auto'
    alias vi='vim'
    alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;定义别名 alias&lt;/h5&gt;
&lt;h6&gt;语法&lt;/h6&gt;
&lt;p&gt;　　&lt;strong&gt;&lt;em&gt;alias 新的命令='旧命令 -选项/参数'&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    [imkindu@centos6 scripts]$ alias imkindu='whoami'       #定义别名
    [imkindu@centos6 scripts]$ alias
    alias imkindu='whoami'
    alias l.='ls -d .* --color=auto'
    alias ll='ls -l --color=auto'
    alias ls='ls --color=auto'
    alias vi='vim'
    alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
    [imkindu@centos6 scripts]$ imkindu          #使用别名
    imkindu&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;取消别名 unalias&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;    [imkindu@centos6 scripts]$ unalias imkindu      #取消别名
    [imkindu@centos6 scripts]$ alias
    alias l.='ls -d .* --color=auto'
    alias ll='ls -l --color=auto'
    alias ls='ls --color=auto'
    alias vi='vim'
    alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
    [imkindu@centos6 scripts]$ imkindu
    -bash: imkindu: command not found&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;别名永久生效&lt;/h5&gt;
&lt;p&gt;　　linux中一切皆文件，要想任何配置永久生效，都必须写入文件中
　　别名永久生效可以写入全局文件&lt;code&gt;/etc/bashrc&lt;/code&gt; 或者个人配置文件&lt;code&gt;~/.bashrc&lt;/code&gt;中&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    [imkindu@centos6 scripts]$ cat ~/.bashrc 
    # .bashrc
    # Source global definitions
    if [ -f /etc/bashrc ]; then
        . /etc/bashrc
    fi
    alias wai=&quot;whoami&quot;                  #将别名写入文件中
    # User specific aliases and functions&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;　　令修改的配置文件生效：&lt;code&gt;source filename&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    [imkindu@centos6 scripts]$ source ~/.bashrc         #令文件生效
    [imkindu@centos6 scripts]$ alias
    alias imkindu='whoami'
    alias l.='ls -d .* --color=auto'
    alias ll='ls -l --color=auto'
    alias ls='ls --color=auto'
    alias vi='vim'
    alias wai='whoami'
    alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
    [imkindu@centos6 scripts]$ wai
    imkindu&lt;/code&gt;&lt;/pre&gt;            </description>
            <pubDate>2017-07-16 02:48:45</pubDate>
            <link>//blog/alias.html</link>
            <guid isPermaLink="true">//blog/alias.html</guid>
                                               <category>linux</category>
                                    </item>
            </channel>
</rss>